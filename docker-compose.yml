version: '3.8'

services:
  mcp-oracle:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp-oracle
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
      - "${WS_PORT:-3001}:3001"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - WS_PORT=3001
      - REDIS_URL=redis://redis:6379
      - CHROMADB_HOST=http://chromadb:8000
      - LOG_LEVEL=${LOG_LEVEL:-info}
    env_file:
      - .env
    depends_on:
      - chromadb
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - mcp-oracle-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  chromadb:
    image: chromadb/chroma:latest
    container_name: mcp-oracle-chromadb
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8000
      - CHROMA_DB_IMPL=clickhouse
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
    volumes:
      - chromadb_data:/chroma/chroma
    depends_on:
      - clickhouse
    networks:
      - mcp-oracle-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: mcp-oracle-clickhouse
    restart: unless-stopped
    environment:
      - CLICKHOUSE_DB=chroma
      - CLICKHOUSE_USER=chroma
      - CLICKHOUSE_PASSWORD=chroma
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - mcp-oracle-network

  redis:
    image: redis:7-alpine
    container_name: mcp-oracle-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - mcp-oracle-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  # Optional: Redis Commander for debugging
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mcp-oracle-redis-ui
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - mcp-oracle-network
    profiles:
      - debug

  # Optional: ChromaDB Admin UI
  chroma-admin:
    image: ghcr.io/amikos-tech/chromadb-admin:latest
    container_name: mcp-oracle-chroma-admin
    restart: unless-stopped
    environment:
      - CHROMA_URL=http://chromadb:8000
    ports:
      - "3001:3000"
    depends_on:
      - chromadb
    networks:
      - mcp-oracle-network
    profiles:
      - debug

volumes:
  chromadb_data:
    driver: local
  clickhouse_data:
    driver: local
  redis_data:
    driver: local

networks:
  mcp-oracle-network:
    driver: bridge